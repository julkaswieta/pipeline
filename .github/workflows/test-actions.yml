name: Build & Test 

on:
  [pull_request, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Restore workloads
      run: dotnet workload restore ./Pipeline/Pipeline/Pipeline.csproj

    - name: Restore dependencies
      run: dotnet restore ./Pipeline/Pipeline/Pipeline.csproj
    
    - name: Install Dotnet Tools
      run: |
        dotnet tool install --global dotnet-ef
        dotnet tool install --global dotnet-coverage
      
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir -p ./.sonar/scanner
        cd ./Pipeline
        dotnet tool update dotnet-sonarscanner --tool-path ../.sonar/scanner

    - name: Start Sonar Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"set09102-test-07102024_pipeline" /o:"set09102-test-07102024" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.scanner.scanAll=false /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

    - name: build
      env:
        ConnectionStrings__BooksDb: ${{ secrets.CONNECTION_STRING }}
        Remote__Username: ${{ secrets.RemoteUsername }}
        Remote__Password: ${{ secrets.RemotePassword }}
        Remote__Server: "soc-app-liv-17.napier.ac.uk"
      run: dotnet build ./Pipeline/Pipeline/Pipeline.csproj --no-restore --framework net8.0

    - name: Test
      env:
        ConnectionStrings__BooksDb: ${{ secrets.CONNECTION_STRING }}
        Remote__Username: ${{ secrets.RemoteUsername }}
        Remote__Password: ${{ secrets.RemotePassword }}
        Remote__Server: "soc-app-liv-17.napier.ac.uk"
      run: dotnet-coverage collect "dotnet test ./Pipeline/Pipeline.sln --framework net8.0" -f xml -o "coverage.xml"

    - name: End Sonar Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
